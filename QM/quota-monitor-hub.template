{
  "Description": "(SO0005) - quota-monitor-for-aws - Hub Template. Version v6.3.0",
  "AWSTemplateFormatVersion": "2010-09-09",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "VPC Configuration"
          },
          "Parameters": [
            "VpcId",
            "SubnetIds"
          ]
        },
        {
          "Label": {
            "default": "Deployment Configuration"
          },
          "Parameters": [
            "DeploymentModel",
            "RegionsList",
            "SnsSpokeRegion",
            "ManagementAccountId"
          ]
        },
        {
          "Label": {
            "default": "Stackset Deployment Options"
          },
          "Parameters": [
            "RegionConcurrency",
            "MaxConcurrentPercentage",
            "FailureTolerancePercentage"
          ]
        },
        {
          "Label": {
            "default": "Notification Configuration"
          },
          "Parameters": [
            "SNSEmail"
          ]
        },
        {
          "Label": {
            "default": "Stackset Stack Configuration Parameters"
          },
          "Parameters": [
            "SQNotificationThreshold",
            "SQMonitoringFrequency",
            "SQReportOKNotifications",
            "SageMakerMonitoring",
            "ConnectMonitoring"
          ]
        }
      ],
      "ParameterLabels": {
        "DeploymentModel": {
          "default": "Do you want to monitor quotas across Organizational Units, Accounts or both?"
        },
        "SNSEmail": {
          "default": "Email address for notifications"
        },
        "ManagementAccountId": {
          "default": "Organization's management Id to scope permissions down for Stackset creation"
        },
        "RegionsList": {
          "default": "List of regions to deploy resources to monitor service quotas"
        },
        "SnsSpokeRegion": {
          "default": "Region in which to launch the SNS stack in the spoke accounts."
        },
        "RegionConcurrencyType": {
          "default": "Region Concurrency"
        },
        "MaxConcurrentPercentage": {
          "default": "Percentage Maximum concurrent accounts"
        },
        "FailureTolerancePercentage": {
          "default": "Percentage Failure tolerance"
        },
        "SQNotificationThreshold": {
          "default": "At what quota utilization do you want notifications?"
        },
        "SQMonitoringFrequency": {
          "default": "Frequency to monitor quota utilization"
        },
        "SQReportOKNotifications": {
          "default": "Report OK Notifications"
        },
        "SageMakerMonitoring": {
          "default": "Enable monitoring for SageMaker quotas"
        },
        "ConnectMonitoring": {
          "default": "Enable monitoring for Connect quotas"
        },
        "VpcId": {
          "default": "VPC ID"
        },
        "SubnetIds": {
          "default": "Subnet IDs"
        }
      }
    }
  },
  "Parameters": {
    "SNSEmail": {
      "Type": "String",
      "Default": "",
      "Description": "To disable email notifications, leave this blank."
    },
    "DeploymentModel": {
      "Type": "String",
      "Default": "Organizations",
      "AllowedValues": [
        "Organizations",
        "Hybrid"
      ]
    },
    "ManagementAccountId": {
      "Type": "String",
      "Default": "*",
      "AllowedPattern": "^([0-9]{1}\\d{11})|\\*$",
      "Description": "AWS Account Id for the organization's management account or *"
    },
    "RegionsList": {
      "Type": "String",
      "Default": "ALL",
      "Description": "Comma separated list of regions like us-east-1,us-east-2 or ALL or leave it blank for ALL"
    },
    "SnsSpokeRegion": {
      "Type": "String",
      "Default": "",
      "Description": "The region in which to launch the SNS stack in each spoke account. Leave blank if the spoke SNS is not needed"
    },
    "RegionConcurrency": {
      "Type": "String",
      "Default": "PARALLEL",
      "AllowedValues": [
        "PARALLEL",
        "SEQUENTIAL"
      ],
      "Description": "Choose to deploy StackSets into regions sequentially or in parallel"
    },
    "MaxConcurrentPercentage": {
      "Type": "Number",
      "Default": 100,
      "Description": "Percentage of accounts per region to which you can deploy stacks at one time. The higher the number, the faster the operation",
      "MaxValue": 100,
      "MinValue": 1
    },
    "FailureTolerancePercentage": {
      "Type": "Number",
      "Default": 0,
      "Description": "Percentage of account, per region, for which stacks can fail before CloudFormation stops the operation in that region. If the operation is stopped in one region, it does not continue in other regions. The lower the number the safer the operation",
      "MaxValue": 100,
      "MinValue": 0
    },
    "SQNotificationThreshold": {
      "Type": "String",
      "Default": "80",
      "AllowedPattern": "^([1-9]|[1-9][0-9])$",
      "ConstraintDescription": "Threshold must be a whole number between 0 and 100",
      "Description": "Threshold percentage for quota utilization alerts (0-100)"
    },
    "SQMonitoringFrequency": {
      "Type": "String",
      "Default": "rate(12 hours)",
      "AllowedValues": [
        "rate(6 hours)",
        "rate(12 hours)",
        "rate(1 day)"
      ]
    },
    "SQReportOKNotifications": {
      "Type": "String",
      "Default": "No",
      "AllowedValues": [
        "Yes",
        "No"
      ]
    },
    "SageMakerMonitoring": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Enable monitoring for SageMaker quotas. NOTE: (1) SageMaker monitoring consumes a high number of quotas, potentially resulting in higher usage cost. (2) Changing this value during a stack update will affect all spoke accounts but if left unchanged, it preserves existing spoke accounts customizations."
    },
    "ConnectMonitoring": {
      "Type": "String",
      "Default": "Yes",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Enable monitoring for Connect quotas. NOTE: (1) Connect monitoring consumes a high number of quotas, potentially resulting in higher usage cost. (2) Changing this value during a stack update will affect all spoke accounts but if left unchanged, it preserves existing spoke accounts customizations."
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "VPC ID for Lambda functions"
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "List of subnet IDs for Lambda functions"
    },
    "S3BucketName": {
      "Type": "String",
      "Description": "Base name of the S3 bucket containing deployment assets (without region suffix)"
    },
    "S3LambdaKeyPrefix": {
      "Type": "String",
      "Default": "quota-monitor-for-aws/v6.3.0/lambda/",
      "Description": "S3 key prefix for Lambda function assets"
    },
    "S3LayerKeyPrefix": {
      "Type": "String",
      "Default": "quota-monitor-for-aws/v6.3.0/layers/",
      "Description": "S3 key prefix for Lambda layer assets"
    },
    "S3TemplateKeyPrefix": {
      "Type": "String",
      "Default": "quota-monitor-for-aws/v6.3.0/templates/",
      "Description": "S3 key prefix for CloudFormation templates"
    }
  },
  "Mappings": {
    "QuotaMonitorMap": {
      "Metrics": {
        "SendAnonymizedData": "Yes",
        "MetricsEndpoint": "https://metrics.awssolutionsbuilder.com/generic"
      },
      "SSMParameters": {
        "Accounts": "/QuotaMonitor/Accounts",
        "OrganizationalUnits": "/QuotaMonitor/OUs",
        "NotificationMutingConfig": "/QuotaMonitor/NotificationConfiguration",
        "RegionsList": "/QuotaMonitor/RegionsToDeploy"
      }
    }
  },
  "Conditions": {
    "EmailTrueCondition": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "SNSEmail"
            },
            ""
          ]
        }
      ]
    },
    "AccountDeployCondition": {
      "Fn::Equals": [
        {
          "Ref": "DeploymentModel"
        },
        "Hybrid"
      ]
    },
    "IsChinaPartition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Partition"
        },
        "aws-cn"
      ]
    },
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "il-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Resources": {
    "QMDefaultSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Default security group for Quota Monitor Lambda functions",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic",
            "IpProtocol": "-1"
          }
        ]
      }
    },
    "QMBusFF5C6C0C": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "QuotaMonitorBus"
      }
    },
    "KMSHubQMEncryptionKeyA80F8C05": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "Description": "CMK for AWS resources provisioned by Quota Monitor in this account",
        "EnableKeyRotation": true,
        "Enabled": true,
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*"
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "KMSHubQMEncryptionKeyAlias6C248240": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/CMK-KMS-Hub",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      }
    },
    "QMOUs122D8EB4": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "List of target Organizational Units",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "OrganizationalUnits"
          ]
        },
        "Type": "StringList",
        "Value": "NOP"
      }
    },
    "QMAccounts3D743F6B": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "List of target Accounts",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "Accounts"
          ]
        },
        "Type": "StringList",
        "Value": "NOP"
      },
      "Condition": "AccountDeployCondition"
    },
    "QMNotificationMutingConfig3B7948BA": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "Muting configuration for services, limits e.g. ec2:L-1216C47A,ec2:Running On-Demand Standard (A, C, D, H, I, M, R, T, Z) instances,dynamodb,logs:*,geo:L-05EFD12D",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "NotificationMutingConfig"
          ]
        },
        "Type": "StringList",
        "Value": "NOP"
      }
    },
    "QMRegionsList17794003": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Description": "list of regions to deploy spoke resources (eg. us-east-1,us-west-2)",
        "Name": {
          "Fn::FindInMap": [
            "QuotaMonitorMap",
            "SSMParameters",
            "RegionsList"
          ]
        },
        "Type": "StringList",
        "Value": {
          "Ref": "RegionsList"
        }
      }
    },
    "QMUtilsLayerQMUtilsLayerLayer80D5D993": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "CompatibleRuntimes": [
          "nodejs18.x"
        ],
        "Content": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "S3BucketName"
                },
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "S3LayerKeyPrefix"
                },
                "utils-layer.zip"
              ]
            ]
          }
        },
        "LayerName": "QM-UtilsLayer"
      }
    },
    "QMHelperQMHelperFunctionServiceRole0506622D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMHelperQMHelperFunction91954E97": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "S3BucketName"
                },
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "S3LambdaKeyPrefix"
                },
                "helper-function.zip"
              ]
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Helper-Function",
        "Environment": {
          "Variables": {
            "METRICS_ENDPOINT": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "MetricsEndpoint"
              ]
            },
            "SEND_METRIC": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "SendAnonymizedData"
              ]
            },
            "QM_STACK_ID": "quota-monitor-hub",
            "QM_EMAIL_NOTIFICATION": {
              "Fn::If": [
                "EmailTrueCondition",
                "Yes",
                "No"
              ]
            },
            "SAGEMAKER_MONITORING": {
              "Ref": "SageMakerMonitoring"
            },
            "CONNECT_MONITORING": {
              "Ref": "ConnectMonitoring"
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QMHelperQMHelperFunctionServiceRole0506622D",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "QMDefaultSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMHelperQMHelperFunctionServiceRole0506622D"
      ]
    },
    "QMHelperQMHelperFunctionEventInvokeConfig580F9F5F": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMHelperQMHelperFunction91954E97"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      }
    },
    "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "QMHelperQMHelperFunction91954E97",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "QMHelperQMHelperFunction91954E97",
                          "Arn"
                        ]
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1",
        "Roles": [
          {
            "Ref": "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB"
          }
        ]
      }
    },
    "QMHelperQMHelperProviderframeworkonEventB1DF6D3F": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "S3BucketName"
                },
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "S3LambdaKeyPrefix"
                },
                "framework-onEvent.zip"
              ]
            ]
          }
        },
        "Description": "AWS CDK resource provider framework - onEvent (quota-monitor-hub/QM-Helper/QM-Helper-Provider)",
        "Environment": {
          "Variables": {
            "USER_ON_EVENT_FUNCTION_ARN": {
              "Fn::GetAtt": [
                "QMHelperQMHelperFunction91954E97",
                "Arn"
              ]
            }
          }
        },
        "Handler": "framework.onEvent",
        "Role": {
          "Fn::GetAtt": [
            "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "QMDefaultSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMHelperQMHelperProviderframeworkonEventServiceRoleDefaultPolicy86C1FCC1",
        "QMHelperQMHelperProviderframeworkonEventServiceRole4A1EBBAB"
      ]
    },
    "QMHelperCreateUUIDE0D423E6": {
      "Type": "Custom::CreateUUID",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "QMHelperQMHelperProviderframeworkonEventB1DF6D3F",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMHelperLaunchData6F23B2C3": {
      "Type": "Custom::LaunchData",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "QMHelperQMHelperProviderframeworkonEventB1DF6D3F",
            "Arn"
          ]
        },
        "SOLUTION_UUID": {
          "Fn::GetAtt": [
            "QMHelperCreateUUIDE0D423E6",
            "UUID"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRule5BDCD4FD": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-SNSPublisherFunction-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "WARN",
              "ERROR"
            ]
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRuleAllowEventRulequotamonitorhubQMSNSPublisherFunctionQMSNSPublisherFunctionLambda63811E436D38C90C": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionEventsRule5BDCD4FD",
            "Arn"
          ]
        }
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueuePolicyBA6A8707": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A"
          }
        ]
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "SNS:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
              }
            },
            {
              "Action": "kms:GenerateDataKey",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Ref": "QMNotificationMutingConfig3B7948BA"
                    }
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C",
        "Roles": [
          {
            "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10"
          }
        ]
      }
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "S3BucketName"
                },
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "S3LambdaKeyPrefix"
                },
                "sns-publisher.zip"
              ]
            ]
          }
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaDeadLetterQueue72FF519A",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-SNSPublisherFunction-Lambda",
        "Environment": {
          "Variables": {
            "QM_NOTIFICATION_MUTING_CONFIG_PARAMETER": {
              "Ref": "QMNotificationMutingConfig3B7948BA"
            },
            "SOLUTION_UUID": {
              "Fn::GetAtt": [
                "QMHelperCreateUUIDE0D423E6",
                "UUID"
              ]
            },
            "METRICS_ENDPOINT": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "MetricsEndpoint"
              ]
            },
            "SEND_METRIC": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "SendAnonymizedData"
              ]
            },
            "TOPIC_ARN": {
              "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "QMDefaultSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleDefaultPolicy1E6E152C",
        "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaServiceRoleA2F00B10"
      ]
    },
    "QMSNSPublisherFunctionQMSNSPublisherFunctionLambdaEventInvokeConfig7A963AA0": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMSNSPublisherFunctionQMSNSPublisherFunctionLambda8BD2DBC1"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      }
    },
    "QMEmailSubscription32E71F90": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Endpoint": {
          "Ref": "SNSEmail"
        },
        "Protocol": "email",
        "TopicArn": {
          "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
        }
      },
      "Condition": "EmailTrueCondition"
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueEventsRuleE50B8D7C": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Summarizer-EventQueue-EventsRule",
        "EventBusName": {
          "Ref": "QMBusFF5C6C0C"
        },
        "EventPattern": {
          "detail": {
            "status": [
              "OK",
              "WARN",
              "ERROR"
            ]
          },
          "detail-type": [
            "Trusted Advisor Check Item Refresh Notification",
            "Service Quotas Utilization Notification"
          ],
          "source": [
            "aws.trustedadvisor",
            "aws-solutions.quota-monitor"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "VisibilityTimeout": 60
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMSummarizerEventQueueQMSummarizerEventQueueQueuePolicyE7E1F6D8": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
          }
        ]
      }
    },
    "QMTable336670B0": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "MessageId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "TimeStamp",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "MessageId",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "TimeStamp",
            "KeyType": "RANGE"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true
        },
        "SSESpecification": {
          "KMSMasterKeyId": {
            "Fn::GetAtt": [
              "KMSHubQMEncryptionKeyA80F8C05",
              "Arn"
            ]
          },
          "SSEEnabled": true,
          "SSEType": "KMS"
        },
        "TimeToLiveSpecification": {
          "AttributeName": "ExpiryTime",
          "Enabled": true
        }
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain"
    },
    "QMReporterQMReporterEventsRule0BF77282": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-EventsRule",
        "ScheduleExpression": "rate(5 minutes)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMReporterQMReporterLambda7D98A6E4",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "QMReporterQMReporterEventsRuleAllowEventRulequotamonitorhubQMReporterQMReporterLambda676D2E786A3BE915": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMReporterQMReporterLambda7D98A6E4",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMReporterQMReporterEventsRule0BF77282",
            "Arn"
          ]
        }
      }
    },
    "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMReporterQMReporterLambdaDeadLetterQueuePolicyE714847D": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC"
          }
        ]
      }
    },
    "QMReporterQMReporterLambdaServiceRoleBA4CED84": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "sqs:DeleteMessage",
                "sqs:ReceiveMessage"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMTable336670B0",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
        "Roles": [
          {
            "Ref": "QMReporterQMReporterLambdaServiceRoleBA4CED84"
          }
        ]
      }
    },
    "QMReporterQMReporterLambda7D98A6E4": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "S3BucketName"
                },
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "S3LambdaKeyPrefix"
                },
                "reporter.zip"
              ]
            ]
          }
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMReporterQMReporterLambdaDeadLetterQueueA0C464BC",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Reporter-Lambda",
        "Environment": {
          "Variables": {
            "QUOTA_TABLE": {
              "Ref": "QMTable336670B0"
            },
            "SQS_URL": {
              "Ref": "QMSummarizerEventQueueQMSummarizerEventQueueQueue95FCCD2A"
            },
            "MAX_MESSAGES": "10",
            "MAX_LOOPS": "10",
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "QMReporterQMReporterLambdaServiceRoleBA4CED84",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "QMDefaultSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMReporterQMReporterLambdaServiceRoleDefaultPolicyC6B87A76",
        "QMReporterQMReporterLambdaServiceRoleBA4CED84"
      ]
    },
    "QMReporterQMReporterLambdaEventInvokeConfig07548BFA": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMReporterQMReporterLambda7D98A6E4"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      }
    },
    "QMTAStackSet": {
      "Type": "AWS::CloudFormation::StackSet",
      "Properties": {
        "AutoDeployment": {
          "Enabled": true,
          "RetainStacksOnAccountRemoval": false
        },
        "CallAs": "DELEGATED_ADMIN",
        "Capabilities": [
          "CAPABILITY_IAM"
        ],
        "Description": "StackSet for deploying Quota Monitor Trusted Advisor spokes in Organization",
        "ManagedExecution": {
          "Active": true
        },
        "Parameters": [
          {
            "ParameterKey": "EventBusArn",
            "ParameterValue": {
              "Fn::GetAtt": [
                "QMBusFF5C6C0C",
                "Arn"
              ]
            }
          },
          {
            "ParameterKey": "VpcId",
            "ParameterValue": {
              "Ref": "VpcId"
            }
          },
          {
            "ParameterKey": "SubnetIds",
            "ParameterValue": {
              "Fn::Join": [
                ",",
                {
                  "Ref": "SubnetIds"
                }
              ]
            }
          },
          {
            "ParameterKey": "S3BucketName",
            "ParameterValue": {
              "Ref": "S3BucketName"
            }
          },
          {
            "ParameterKey": "S3LambdaKeyPrefix",
            "ParameterValue": {
              "Ref": "S3LambdaKeyPrefix"
            }
          },
          {
            "ParameterKey": "S3LayerKeyPrefix",
            "ParameterValue": {
              "Ref": "S3LayerKeyPrefix"
            }
          }
        ],
        "PermissionModel": "SERVICE_MANAGED",
        "StackSetName": "QM-TA-Spoke-StackSet",
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "S3BucketName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              ".s3.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com",
              {
                "Fn::If": [
                  "IsChinaPartition",
                  ".cn",
                  ""
                ]
              },
              "/",
              {
                "Ref": "S3TemplateKeyPrefix"
              },
              {
                "Fn::If": [
                  "IsChinaPartition",
                  "quota-monitor-ta-spoke-cn.template",
                  "quota-monitor-ta-spoke.template"
                ]
              }
            ]
          ]
        }
      }
    },
    "QMSQStackSet": {
      "Type": "AWS::CloudFormation::StackSet",
      "Properties": {
        "AutoDeployment": {
          "Enabled": true,
          "RetainStacksOnAccountRemoval": false
        },
        "CallAs": "DELEGATED_ADMIN",
        "Capabilities": [
          "CAPABILITY_IAM"
        ],
        "Description": "StackSet for deploying Quota Monitor Service Quota spokes in Organization",
        "ManagedExecution": {
          "Active": true
        },
        "Parameters": [
          {
            "ParameterKey": "EventBusArn",
            "ParameterValue": {
              "Fn::GetAtt": [
                "QMBusFF5C6C0C",
                "Arn"
              ]
            }
          },
          {
            "ParameterKey": "SpokeSnsRegion",
            "ParameterValue": {
              "Ref": "SnsSpokeRegion"
            }
          },
          {
            "ParameterKey": "SageMakerMonitoring",
            "ParameterValue": {
              "Ref": "SageMakerMonitoring"
            }
          },
          {
            "ParameterKey": "ConnectMonitoring",
            "ParameterValue": {
              "Ref": "ConnectMonitoring"
            }
          },
          {
            "ParameterKey": "VpcId",
            "ParameterValue": {
              "Ref": "VpcId"
            }
          },
          {
            "ParameterKey": "SubnetIds",
            "ParameterValue": {
              "Fn::Join": [
                ",",
                {
                  "Ref": "SubnetIds"
                }
              ]
            }
          },
          {
            "ParameterKey": "S3BucketName",
            "ParameterValue": {
              "Ref": "S3BucketName"
            }
          },
          {
            "ParameterKey": "S3LambdaKeyPrefix",
            "ParameterValue": {
              "Ref": "S3LambdaKeyPrefix"
            }
          },
          {
            "ParameterKey": "S3LayerKeyPrefix",
            "ParameterValue": {
              "Ref": "S3LayerKeyPrefix"
            }
          }
        ],
        "PermissionModel": "SERVICE_MANAGED",
        "StackSetName": "QM-SQ-Spoke-StackSet",
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "S3BucketName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              ".s3.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com",
              {
                "Fn::If": [
                  "IsChinaPartition",
                  ".cn",
                  ""
                ]
              },
              "/",
              {
                "Ref": "S3TemplateKeyPrefix"
              },
              {
                "Fn::If": [
                  "IsChinaPartition",
                  "quota-monitor-sq-spoke-cn.template",
                  "quota-monitor-sq-spoke.template"
                ]
              }
            ]
          ]
        }
      }
    },
    "QMSNSStackSet": {
      "Type": "AWS::CloudFormation::StackSet",
      "Properties": {
        "AutoDeployment": {
          "Enabled": true,
          "RetainStacksOnAccountRemoval": false
        },
        "CallAs": "DELEGATED_ADMIN",
        "Capabilities": [
          "CAPABILITY_IAM"
        ],
        "Description": "StackSet for deploying Quota Monitor notification spokes in Organization",
        "ManagedExecution": {
          "Active": true
        },
        "Parameters": [
          {
            "ParameterKey": "EventBusArn",
            "ParameterValue": {
              "Fn::GetAtt": [
                "QMBusFF5C6C0C",
                "Arn"
              ]
            }
          },
          {
            "ParameterKey": "VpcId",
            "ParameterValue": {
              "Ref": "VpcId"
            }
          },
          {
            "ParameterKey": "SubnetIds",
            "ParameterValue": {
              "Fn::Join": [
                ",",
                {
                  "Ref": "SubnetIds"
                }
              ]
            }
          },
          {
            "ParameterKey": "S3BucketName",
            "ParameterValue": {
              "Ref": "S3BucketName"
            }
          },
          {
            "ParameterKey": "S3LambdaKeyPrefix",
            "ParameterValue": {
              "Ref": "S3LambdaKeyPrefix"
            }
          },
          {
            "ParameterKey": "S3LayerKeyPrefix",
            "ParameterValue": {
              "Ref": "S3LayerKeyPrefix"
            }
          }
        ],
        "PermissionModel": "SERVICE_MANAGED",
        "StackSetName": "QM-SNS-Spoke-StackSet",
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "S3BucketName"
              },
              "-",
              {
                "Ref": "AWS::Region"
              },
              ".s3.",
              {
                "Ref": "AWS::Region"
              },
              ".amazonaws.com",
              {
                "Fn::If": [
                  "IsChinaPartition",
                  ".cn",
                  ""
                ]
              },
              "/",
              {
                "Ref": "S3TemplateKeyPrefix"
              },
              {
                "Fn::If": [
                  "IsChinaPartition",
                  "quota-monitor-ta-spoke-cn.template",
                  "quota-monitor-ta-spoke.template"
                ]
              }
            ]
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-EventsRule",
        "EventPattern": {
          "detail-type": [
            "Parameter Store Change"
          ],
          "source": [
            "aws.ssm"
          ],
          "resources": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":ssm:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":parameter",
                  {
                    "Ref": "QMOUs122D8EB4"
                  }
                ]
              ]
            },
            {
              "Fn::If": [
                "AccountDeployCondition",
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":parameter",
                      {
                        "Ref": "QMAccounts3D743F6B"
                      }
                    ]
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":ssm:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":parameter",
                  {
                    "Ref": "QMRegionsList17794003"
                  }
                ]
              ]
            }
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerEventsRuleAllowEventRulequotamonitorhubQMDeploymentManagerQMDeploymentManagerLambda8FAD8D8E9E4893B8": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerEventsRule53DB2DA9",
            "Arn"
          ]
        }
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "KmsMasterKeyId": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueuePolicy6B59E185": {
      "Type": "AWS::SQS::QueuePolicy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::GetAtt": [
                  "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Queues": [
          {
            "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2"
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
              ]
            ]
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:SendMessage",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:CreateGrant"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "KMSHubQMEncryptionKeyA80F8C05",
                  "Arn"
                ]
              }
            },
            {
              "Action": "kms:ListAliases",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "events:PutPermission",
                "events:RemovePermission"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "events:DescribeEventBus",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "QMBusFF5C6C0C",
                  "Arn"
                ]
              }
            },
            {
              "Action": "ssm:GetParameter",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":parameter",
                      {
                        "Ref": "QMOUs122D8EB4"
                      }
                    ]
                  ]
                },
                {
                  "Fn::If": [
                    "AccountDeployCondition",
                    {
                      "Fn::Join": [
                        "",
                        [
                          "arn:",
                          {
                            "Ref": "AWS::Partition"
                          },
                          ":ssm:",
                          {
                            "Ref": "AWS::Region"
                          },
                          ":",
                          {
                            "Ref": "AWS::AccountId"
                          },
                          ":parameter",
                          {
                            "Ref": "QMAccounts3D743F6B"
                          }
                        ]
                      ]
                    },
                    {
                      "Ref": "AWS::NoValue"
                    }
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":ssm:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":parameter",
                      {
                        "Ref": "QMRegionsList17794003"
                      }
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "organizations:DescribeOrganization",
                "organizations:ListRoots",
                "organizations:ListAccounts"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "organizations:ListDelegatedAdministrators",
                "organizations:ListAccountsForParent"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "cloudformation:DescribeStackSet",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset/QM-TA-Spoke-StackSet:*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset/QM-SQ-Spoke-StackSet:*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset/QM-SNS-Spoke-StackSet:*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "cloudformation:CreateStackInstances",
                "cloudformation:DeleteStackInstances",
                "cloudformation:ListStackInstances"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset/QM-TA-Spoke-StackSet:*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset/QM-SQ-Spoke-StackSet:*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset/QM-SNS-Spoke-StackSet:*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset-target/QM-SNS-Spoke-StackSet:*/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset-target/QM-TA-Spoke-StackSet:*/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*:",
                      {
                        "Ref": "ManagementAccountId"
                      },
                      ":stackset-target/QM-SQ-Spoke-StackSet:*/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":cloudformation:*::type/resource/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": "ec2:DescribeRegions",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "support:DescribeTrustedAdvisorChecks",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeVpcs",
                "ec2:DescribeSubnets"
              ],
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "Roles": [
          {
            "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
          }
        ]
      }
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "-",
              [
                {
                  "Ref": "S3BucketName"
                },
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Ref": "S3LambdaKeyPrefix"
                },
                "deployment-manager.zip"
              ]
            ]
          }
        },
        "DeadLetterConfig": {
          "TargetArn": {
            "Fn::GetAtt": [
              "QMDeploymentManagerQMDeploymentManagerLambdaDeadLetterQueue9B4636C2",
              "Arn"
            ]
          }
        },
        "Description": "SO0005 quota-monitor-for-aws - QM-Deployment-Manager-Lambda",
        "Environment": {
          "Variables": {
            "EVENT_BUS_NAME": {
              "Ref": "QMBusFF5C6C0C"
            },
            "EVENT_BUS_ARN": {
              "Fn::GetAtt": [
                "QMBusFF5C6C0C",
                "Arn"
              ]
            },
            "TA_STACKSET_ID": {
              "Fn::GetAtt": [
                "QMTAStackSet",
                "StackSetId"
              ]
            },
            "SQ_STACKSET_ID": {
              "Fn::GetAtt": [
                "QMSQStackSet",
                "StackSetId"
              ]
            },
            "SNS_STACKSET_ID": {
              "Fn::GetAtt": [
                "QMSNSStackSet",
                "StackSetId"
              ]
            },
            "QM_OU_PARAMETER": {
              "Ref": "QMOUs122D8EB4"
            },
            "QM_ACCOUNT_PARAMETER": {
              "Fn::If": [
                "AccountDeployCondition",
                {
                  "Ref": "QMAccounts3D743F6B"
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            "DEPLOYMENT_MODEL": {
              "Ref": "DeploymentModel"
            },
            "REGIONS_LIST": {
              "Ref": "RegionsList"
            },
            "QM_REGIONS_LIST_PARAMETER": {
              "Ref": "QMRegionsList17794003"
            },
            "SNS_SPOKE_REGION": {
              "Ref": "SnsSpokeRegion"
            },
            "REGIONS_CONCURRENCY_TYPE": {
              "Ref": "RegionConcurrency"
            },
            "MAX_CONCURRENT_PERCENTAGE": {
              "Ref": "MaxConcurrentPercentage"
            },
            "FAILURE_TOLERANCE_PERCENTAGE": {
              "Ref": "FailureTolerancePercentage"
            },
            "SQ_NOTIFICATION_THRESHOLD": {
              "Ref": "SQNotificationThreshold"
            },
            "SQ_MONITORING_FREQUENCY": {
              "Ref": "SQMonitoringFrequency"
            },
            "SQ_REPORT_OK_NOTIFICATIONS": {
              "Ref": "SQReportOKNotifications"
            },
            "SOLUTION_UUID": {
              "Fn::GetAtt": [
                "QMHelperCreateUUIDE0D423E6",
                "UUID"
              ]
            },
            "METRICS_ENDPOINT": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "MetricsEndpoint"
              ]
            },
            "SEND_METRIC": {
              "Fn::FindInMap": [
                "QuotaMonitorMap",
                "Metrics",
                "SendAnonymizedData"
              ]
            },
            "LOG_LEVEL": "info",
            "CUSTOM_SDK_USER_AGENT": "AwsSolution/SO0005/v6.3.0",
            "VERSION": "v6.3.0",
            "SOLUTION_ID": "SO0005"
          }
        },
        "Handler": "index.handler",
        "KmsKeyArn": {
          "Fn::GetAtt": [
            "KMSHubQMEncryptionKeyA80F8C05",
            "Arn"
          ]
        },
        "Layers": [
          {
            "Ref": "QMUtilsLayerQMUtilsLayerLayer80D5D993"
          }
        ],
        "MemorySize": 512,
        "Role": {
          "Fn::GetAtt": [
            "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72",
            "Arn"
          ]
        },
        "Runtime": "nodejs18.x",
        "Timeout": 120,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "QMDefaultSecurityGroup",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": {
            "Ref": "SubnetIds"
          }
        }
      },
      "DependsOn": [
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRoleDefaultPolicy7E3D0777",
        "QMDeploymentManagerQMDeploymentManagerLambdaServiceRole84304F72"
      ]
    },
    "QMDeploymentManagerQMDeploymentManagerLambdaEventInvokeConfig4C3821AB": {
      "Type": "AWS::Lambda::EventInvokeConfig",
      "Properties": {
        "FunctionName": {
          "Ref": "QMDeploymentManagerQMDeploymentManagerLambdaB36F1B21"
        },
        "MaximumEventAgeInSeconds": 14400,
        "Qualifier": "$LATEST"
      }
    }
  },
  "Outputs": {
    "UUID": {
      "Description": "UUID for the deployment",
      "Value": {
        "Fn::GetAtt": [
          "QMHelperCreateUUIDE0D423E6",
          "UUID"
        ]
      }
    },
    "EventBus": {
      "Description": "Event Bus Arn in hub",
      "Value": {
        "Fn::GetAtt": [
          "QMBusFF5C6C0C",
          "Arn"
        ]
      }
    },
    "SNSTopic": {
      "Description": "The SNS Topic where notifications are published to",
      "Value": {
        "Ref": "QMSNSPublisherQMSNSPublisherSNSTopic7EE2EBF4"
      }
    },
    "VpcId": {
      "Description": "VPC ID",
      "Value": {
        "Ref": "VpcId"
      }
    },
    "S3BucketName": {
      "Description": "S3 Bucket Name",
      "Value": {
        "Ref": "S3BucketName"
      }
    },
    "SubnetIds": {
      "Description": "Subnet IDs",
      "Value": {
        "Fn::Join": [
          ",",
          {
            "Ref": "SubnetIds"
          }
        ]
      }
    }
  }
}